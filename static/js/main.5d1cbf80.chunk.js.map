{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","findContact","axios","defaults","baseURL","dispatch","actions","get","then","data","catch","error","name","number","post","contactId","delete","items","createReducer","_","payload","state","filter","id","combineReducers","getFilter","contacts","getVisibleContacts","createSelector","toLowerCase","includes","ContactForm","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","alert","className","style","form","this","input","autoComplete","type","onChange","btn","Component","connect","contactsOperations","ContactList","fetchContacts","list","map","item","onClick","onDeleteContact","contactsSelectors","contactsActions","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d1cbf80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst findContact = createAction('contacts/find');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  findContact,\n};\n","import axios from 'axios';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', {\n      name: name,\n      number: number,\n    })\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.findContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nexport default { getFilter, getVisibleContacts };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.name !== '' && this.state.number !== '') {\n      this.props.onSubmit({\n        name: this.state.name,\n        number: this.state.number,\n      });\n\n      this.setState({ name: '', number: '' });\n      return;\n    }\n\n    alert('Please, complete all required fields!');\n  };\n\n  render() {\n    return (\n      <form className={style.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={style.input}\n            autoComplete=\"on\"\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={style.input}\n            autoComplete=\"on\"\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={style.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport style from './ContactList.module.css';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <ul className={style.list}>\n        {this.props.contacts.map(({ id, name, number }) => (\n          <li className={style.item} key={id}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className={style.btn}\n              onClick={() => this.props.onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts/';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={style.filter}>\n    <label>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.findContact(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </>\n);\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsReducer } from './contacts/';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}